
# Configure here which LLM you'll use as the main driver for Aurora
# Only set up the env for the LLM you intend to use, as setting up multiple will cause overrides
LLAMMA_CPP_MODEL_PATH=

# You can set up the OpenAI key to use their embeddings and not use their chat model
OPENAI_API_KEY=
OPENAI_MODEL=
# By default the STT will detect automatically the language, but it can be flaky with smaller models, specifying your language can help with proper detection
STT_LANGUAGE=

# Turning this on will improve Silence detection, but it requires more resources
STT_SILERO_DEACTIVITY_DETECTION=false

# Activate nois reduction for the wakeword detection
# This will make the wakeword detection more accurate in fairly normal noisy environments
# It requires installing the SpeedX library, pre-compiled or built from skratch
# Build from skratch: https://github.com/TeaPoly/speexdsp-ns-python
# Pre-compiled binaries: https://github.com/dscripka/openWakeWord/releases/tag/v0.1.1
STT_WAKEWORD_SPEEDX_NOISE_REDUCTION=false

# You can use one of the voice models for your desired language provided with the code or download higher quality/different ones at:
# https://github.com/rhasspy/piper/blob/master/VOICES.md
TTS_MODEL_FILE_PATH="/voice_models/en_US-lessac-medium.onnx"
TTS_MODEL_CONFIG_FILE_PATH="/voice_models/en_US-lessac-medium.onnx.txt"
# Higher quality voices have higher sample rate, this env is temporary for a temporary fix to the original lib
# You can check the sample rate to your model within it's config file
# 22050 is the default for medium and high quality, 16000 for low
TTS_MODEL_SAMPLE_RATE=22050

# Configurates which componets use CUDA acceleration (to allow better memory control in low-end GPUs)
USE_CUDA_TTS=false
USE_CUDA_STT=false
USE_CUDA_OCR_BG=false
USE_CUDA_OCR_CURR=true

# Jira ENVS
# Run: pip install --upgrade --quiet atlassian-python-api
JIRA_ACTIVATE_PLUGIN=false
JIRA_API_TOKEN=
JIRA_USERNAME=
JIRA_INSTANCE_URL=https://jira.atlassian.net/

# OpenRecall ENVS
OPENRECALL_ACTIVATE_PLUGIN=false

# Brave Search Envs
BRAVE_SEARCH_ACTIVATE_PLUGIN=false
BRAVE_API_KEY=


# Github Plugin
# Run: pip install --upgrade --quiet  pygithub
# Follow instructions to create app, give permissions and add repositories to it: https://python.langchain.com/docs/integrations/tools/github/
GITHUB_ACTIVATE_PLUGIN=false
GITHUB_APP_ID=
GITHUB_APP_PRIVATE_KEY=
GITHUB_REPOSITORY=

# Slack Plugin
# Run: pip install --upgrade --quiet slack_sdk beautifulsoup4
SLACK_ACTIVATE_PLUGIN=false
SLACK_USER_TOKEN=

# ------ Google Plugins ------
# Generate credentials following: https://developers.google.com/gmail/api/quickstart/python?hl=pt-br#authorize_credentials_for_a_desktop_application
GOOGLE_CREDENTIALS_FILE=google_credentials.json

# Gmail Plugin
# Run: pip install -qU langchain-google-community\[gmail\]
GMAIL_ACTIVATE_PLUGIN=false

# Google Calendar Plugin
# Run: pip install -qU langchain-google-community\[calendar\]
GCALENDAR_ACTIVATE_PLUGIN=false
